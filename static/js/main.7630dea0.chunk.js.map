{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","setTodo","selectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","filterTodos","useState","query","setQuery","groupBy","setGroupBy","useEffect","handleChange","event","target","value","localName","onChange","placeholder","trim","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","GroupBy","Loader","TodoModal","selectedUser","setSelectedUser","userId","response","href","email","name","App","setTodos","isLoaded","setIsLoaded","visibleTodos","setVisibleTodos","setSelectedTodo","filter","All","Active","Completed","toLowerCase","includes","toLocaleLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7630dea0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setTodo, selectedTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodo === todo },\n            )}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': selectedTodo !== todo },\n                    { 'fa-eye-slash': selectedTodo === todo },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\n\ntype Props = {\n  filterTodos: (query: string, groupBy: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filterTodos }) => {\n  const [query, setQuery] = useState('');\n  const [groupBy, setGroupBy] = useState('all');\n\n  useEffect(() => {\n    filterTodos(groupBy, query);\n  }, [query, groupBy]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>\n  | React.ChangeEvent<HTMLInputElement>) => {\n    const { value, localName } = event.target;\n\n    if (localName === 'input') {\n      setQuery(value);\n    }\n\n    if (localName === 'select') {\n      setGroupBy(value);\n    }\n  };\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleChange}\n            value={groupBy}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.trim().length > 0 ? (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        ) : ''}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum GroupBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(todos[0]);\n\n  useEffect(() => {\n    getTodos().then(response => {\n      setTodos(response);\n      setVisibleTodos(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  const filterTodos = (groupBy: string, query: string) => {\n    setVisibleTodos(\n      todos.filter(todo => {\n        switch (groupBy) {\n          case GroupBy.All:\n            return true;\n          case GroupBy.Active:\n            return todo.completed === false;\n          case GroupBy.Completed:\n            return todo.completed === true;\n          default:\n            return true;\n        }\n      }).filter(todo => (\n        todo.title.toLowerCase().includes(query.toLocaleLowerCase())\n      )),\n    );\n  };\n\n  const setTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filterTodos={filterTodos} />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded ? (\n                <TodoList\n                  todos={visibleTodos}\n                  setTodo={setTodo}\n                  selectedTodo={selectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} setTodo={setTodo} />}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null;\n  setTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!todo) {\n      return;\n    }\n\n    getUser(todo.userId).then(response => {\n      setSelectedUser(response);\n    });\n  }, [todo]);\n\n  return (\n    <>\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n        {!selectedUser ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todo?.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setTodo(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}